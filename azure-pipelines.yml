# # Maven package Java project Web App to Linux on Azure
# # Build your Java project and deploy it to Azure as a Linux web app
# # Add steps that analyze code, save build artifacts, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/java

# # trigger:
# # - master

# # variables:

# #   # Azure Resource Manager connection created during pipeline creation
# #   azureSubscription: 'fe6a3217-2ab6-4742-a167-c38464905206'

# #   # Web app name
# #   webAppName: 'AJAYGOUD'

# #   # Environment name
# #   environmentName: 'AJAYGOUD'

# #   # Agent VM image name
# #   vmImageName: 'windows-latest'
# # pool:
# #   vmImage: 'ubuntu-latest'
# trigger:
#   branches:
#     include:
#     - master
#     - feature/*
#   paths:
#     include:
#     - deployment/tradein_vehicle_acquisition_discussed/*
#     exclude:
#     - deployment/*
# variables:
# - name: System.Debug
#   value: true
# # stages:
# # - stage: Build
# #   displayName: Build stage
# #   jobs:
# #   - job: Build
# #     displayName: Build job
# pool:
#       vmImage: 'ubuntu-latest'
# stages:
# - stage: Build
#   displayName: Build stage
#   jobs:
#   - job: MavenPackageAndPublishArtifacts
#     displayName: Maven Package and Publish Artifacts
#     # pool:
#     #   vmImage: $(vmImageName)
pool:
  vmImage: 'ubuntu-latest'
trigger:
  branches:
    include:
    - master
    - feature/*
  paths:
    include:
    - deployment/tradein_vehicle_acquisition_discussed/*
    exclude:
    - deployment/*
variables:
- name: System.Debug
  value: true
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: DeployLinuxWebApp
#     displayName: Deploy Linux Web App
#     environment: $(environmentName)
    # pool:
    #   vmImage: $(vmImageName)
- stage: DeployToDev
  displayName: 'Deploy stage'
  jobs:
  - deployment: DevDeploy
    pool:
      vmImage: 'ubuntu-latest'
    environment:
      name: 'mldev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: AJAYGOUD'
            inputs:
              azureSubscription: 'affffffff'
              appType: 'webAppLinux'
              appName: 'AJAY122'
              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'